{"version":3,"sources":["./src/app/routes/call-center/call-center.module.ts","./src/app/routes/call-center/agents/agents.component.ts","./src/app/routes/call-center/agents/agents.component.html","./src/app/routes/call-center/tiers/remote-data.service.ts","./src/app/routes/call-center/queue/remote-data.service.ts","./src/app/routes/call-center/tiers/tiers.component.ts","./src/app/routes/call-center/tiers/tiers.component.html","./src/app/routes/call-center/queue/queue.component.ts","./src/app/routes/call-center/queue/queue.component.html","./src/app/routes/call-center/call-center-routing.module.ts","./src/app/routes/call-center/agents/remote-data.service.ts"],"names":[],"mappings":"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","file":"call-center-call-center-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CallCenterRoutingModule } from './call-center-routing.module';\r\nimport { SharedModule } from '@shared';\r\nimport { QueueComponent } from './queue/queue.component';\r\nimport { AgentsComponent } from './agents/agents.component';\r\nimport { TiersComponent } from './tiers/tiers.component';\r\n\r\nconst COMPONENTS = [QueueComponent,AgentsComponent ,TiersComponent];\r\nconst COMPONENTS_DYNAMIC = [];\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...COMPONENTS_DYNAMIC,QueueComponent , AgentsComponent, TiersComponent],\r\n  imports: [\r\n    SharedModule,\r\n    CallCenterRoutingModule\r\n  ],\r\n  entryComponents: COMPONENTS_DYNAMIC,\r\n})\r\nexport class CallCenterModule { }\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\nimport { MtxGridColumn } from '@ng-matero/extensions';\r\nimport { TablesRemoteDataService } from '../tiers/remote-data.service';\r\n@Component({\r\n  selector: 'app-agents',\r\n  templateUrl: './agents.component.html',\r\n  styleUrls: ['./agents.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [TablesRemoteDataService],\r\n})\r\nexport class AgentsComponent implements OnInit {\r\n\r\n  columns: MtxGridColumn[] = [\r\n    {\r\n      header: ' S.NO>',\r\n      field: ' s.no.',\r\n      formatter: (data: any) => `<a href=\"${data.html_url}\" target=\"_blank\">${data.name}</a>`,\r\n    },\r\n    { header: 'AGENT NAME', field: 'Agent Name' },\r\n    { header: 'SIP-ID', field: 'SIP-ID', },\r\n    { header: 'CONTACT', field: 'Contact', },\r\n    { header: 'QUEUE', field: 'Queue', },\r\n    { header: 'TYPE\t', field: 'Type', },\r\n    { header: 'STATUS\t', field: 'Status', },\r\n    { header: 'ACTIONS\t', field: 'Actions', },\r\n    \r\n    \r\n   ];\r\n  list = [];\r\n  total = 0;\r\n  isLoading = true;\r\n\r\n  query = {\r\n    q: 'user:nzbin',\r\n    sort: 'stars',\r\n    order: 'desc',\r\n    page: 0,\r\n    per_page: 10,\r\n  };\r\n\r\n  get params() {\r\n    const p = Object.assign({}, this.query);\r\n    p.page += 1;\r\n    return p;\r\n  }\r\n\r\n  constructor(private remoteSrv: TablesRemoteDataService, private cdr: ChangeDetectorRef) {}\r\n\r\n  ngOnInit() {\r\n    // this.getData();\r\n    this.isLoading= false;\r\n  }\r\n\r\n  getData() {\r\n    this.isLoading = true;\r\n\r\n    this.remoteSrv.getData(this.params).subscribe(\r\n      res => {\r\n        this.list = res.items;\r\n        this.total = res.total_count;\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      }\r\n    );\r\n  }\r\n\r\n  getNextPage(e: PageEvent) {\r\n    this.query.page = e.pageIndex;\r\n    this.query.per_page = e.pageSize;\r\n    this.getData();\r\n  }\r\n\r\n  search() {\r\n    this.query.page = 0;\r\n    this.getData();\r\n  }\r\n}\r\n\r\n\r\n","<page-header class=\"bg-blue-600\"></page-header>\r\n\r\n<div class=\"col-lg-12 stt\">\r\n    <button class=\"m-r-8\" mat-raised-button color=\"primary\" >ADD </button>\r\n    <button class=\"m-r-8\" mat-raised-button color=\"primary\" >RELOAD </button>\r\n</div>\r\n<form>\r\n  <mat-form-field class=\"m-r-8\">\r\n    <input matInput [(ngModel)]=\"query.q\" name=\"q\" placeholder=\"Query String\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"m-r-8\">\r\n    <mat-select [(ngModel)]=\"query.sort\" name=\"sort\" placeholder=\"Sort\">\r\n      <mat-option>-- None --</mat-option>\r\n      <mat-option value=\"stars\">stars</mat-option>\r\n      <mat-option value=\"forks\">forks</mat-option>\r\n      <mat-option value=\"updated\">updated</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"m-r-8\">\r\n    <mat-select [(ngModel)]=\"query.order\" name=\"order\" placeholder=\"Order\">\r\n      <mat-option>-- None --</mat-option>\r\n      <mat-option value=\"desc\">desc</mat-option>\r\n      <mat-option value=\"asc\">asc</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <button class=\"m-r-8\" mat-raised-button color=\"primary\" (click)=\"search()\">Search</button>\r\n</form>\r\n\r\n<mtx-grid [data]=\"list\"\r\n          [columns]=\"columns\"\r\n          [length]=\"total\"\r\n          [loading]=\"isLoading\"\r\n          [pageOnFront]=\"false\"\r\n          [pageIndex]=\"query.page\"\r\n          [pageSize]=\"query.per_page\"\r\n          [pageSizeOptions]=\"[5,10,20]\"\r\n          (page)=\"getNextPage($event)\">\r\n</mtx-grid>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface RepoSearchList {\r\n  incomplete_results: boolean;\r\n  items: any[];\r\n  total_count: number;\r\n}\r\n\r\n@Injectable()\r\nexport class TablesRemoteDataService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getData(params = {}): Observable<RepoSearchList> {\r\n    return this.http.get<RepoSearchList>('https://api.github.com/search/repositories', { params });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface RepoSearchList {\r\n  incomplete_results: boolean;\r\n  items: any[];\r\n  total_count: number;\r\n}\r\n\r\n@Injectable()\r\nexport class TablesRemoteDataService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getData(params = {}): Observable<RepoSearchList> {\r\n    return this.http.get<RepoSearchList>('https://api.github.com/search/repositories', { params });\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\nimport { MtxGridColumn } from '@ng-matero/extensions';\r\nimport { TablesRemoteDataService } from '../agents/remote-data.service';\r\n@Component({\r\n  selector: 'app-tiers',\r\n  templateUrl: './tiers.component.html',\r\n  styleUrls: ['./tiers.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [TablesRemoteDataService],\r\n})\r\nexport class TiersComponent implements OnInit {\r\n\r\n  columns: MtxGridColumn[] = [\r\n    {\r\n      header: ' S.NO>',\r\n      field: ' s.no.',\r\n      formatter: (data: any) => `<a href=\"${data.html_url}\" target=\"_blank\">${data.name}</a>`,\r\n    },\r\n    { header: 'AGENT', field: 'Agent' },\r\n    { header: 'QUEUE', field: 'Queue', },\r\n    { header: 'LEVEL', field: 'Level', },\r\n    { header: 'POSITION', field: 'Position', },\r\n    { header: 'ACTIONS\t', field: 'Actions', },\r\n    \r\n    \r\n   ];\r\n  list = [];\r\n  total = 0;\r\n  isLoading = true;\r\n\r\n  query = {\r\n    q: 'user:nzbin',\r\n    sort: 'stars',\r\n    order: 'desc',\r\n    page: 0,\r\n    per_page: 10,\r\n  };\r\n\r\n  get params() {\r\n    const p = Object.assign({}, this.query);\r\n    p.page += 1;\r\n    return p;\r\n  }\r\n\r\n  constructor(private remoteSrv: TablesRemoteDataService, private cdr: ChangeDetectorRef) {}\r\n\r\n  ngOnInit() {\r\n    // this.getData();\r\n    this.isLoading= false;\r\n  }\r\n\r\n  getData() {\r\n    this.isLoading = true;\r\n\r\n    this.remoteSrv.getData(this.params).subscribe(\r\n      res => {\r\n        this.list = res.items;\r\n        this.total = res.total_count;\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      }\r\n    );\r\n  }\r\n\r\n  getNextPage(e: PageEvent) {\r\n    this.query.page = e.pageIndex;\r\n    this.query.per_page = e.pageSize;\r\n    this.getData();\r\n  }\r\n\r\n  search() {\r\n    this.query.page = 0;\r\n    this.getData();\r\n  }\r\n}\r\n\r\n\r\n\r\n","<page-header class=\"bg-blue-600\"></page-header>\r\n\r\n<!-- <div class=\"col-lg-12 stt\">\r\n    <button class=\"m-r-8\" mat-raised-button color=\"primary\" >ADD </button>\r\n    <button class=\"m-r-8\" mat-raised-button color=\"primary\" >RELOAD </button>\r\n</div> -->\r\n<form>\r\n  <mat-form-field class=\"m-r-8\">\r\n    <input matInput [(ngModel)]=\"query.q\" name=\"q\" placeholder=\"Query String\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"m-r-8\">\r\n    <mat-select [(ngModel)]=\"query.sort\" name=\"sort\" placeholder=\"Sort\">\r\n      <mat-option>-- None --</mat-option>\r\n      <mat-option value=\"stars\">stars</mat-option>\r\n      <mat-option value=\"forks\">forks</mat-option>\r\n      <mat-option value=\"updated\">updated</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"m-r-8\">\r\n    <mat-select [(ngModel)]=\"query.order\" name=\"order\" placeholder=\"Order\">\r\n      <mat-option>-- None --</mat-option>\r\n      <mat-option value=\"desc\">desc</mat-option>\r\n      <mat-option value=\"asc\">asc</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <button class=\"m-r-8\" mat-raised-button color=\"primary\" (click)=\"search()\">Search</button>\r\n</form>\r\n\r\n<mtx-grid [data]=\"list\"\r\n          [columns]=\"columns\"\r\n          [length]=\"total\"\r\n          [loading]=\"isLoading\"\r\n          [pageOnFront]=\"false\"\r\n          [pageIndex]=\"query.page\"\r\n          [pageSize]=\"query.per_page\"\r\n          [pageSizeOptions]=\"[5,10,20]\"\r\n          (page)=\"getNextPage($event)\">\r\n</mtx-grid>\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\nimport { MtxGridColumn } from '@ng-matero/extensions';\r\nimport { TablesRemoteDataService } from '../queue/remote-data.service';\r\n@Component({\r\n  selector: 'app-queue',\r\n  templateUrl: './queue.component.html',\r\n  styleUrls: ['./queue.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [TablesRemoteDataService],\r\n})\r\nexport class QueueComponent implements OnInit {\r\n\r\n  columns: MtxGridColumn[] = [\r\n    {\r\n      header: ' S.NO>',\r\n      field: ' s.no.',\r\n      formatter: (data: any) => `<a href=\"${data.html_url}\" target=\"_blank\">${data.name}</a>`,\r\n    },\r\n    { header: 'QUEUE NAME', field: 'Queue Name' },\r\n    { header: 'EXPRESSION', field: 'Expression', },\r\n    { header: 'STRATEGY', field: 'Strategy', },\r\n    { header: 'MOH_SOUND', field: 'Moh-Sound', },\r\n    { header: 'TIME BASESCORE\t', field: 'Time BaseScore', },\r\n    { header: 'TIER RULE\t', field: 'Tier Rule', },\r\n    { header: 'ACTIONS\t', field: 'Actions', },\r\n    \r\n    \r\n   ];\r\n  list = [];\r\n  total = 0;\r\n  isLoading = true;\r\n\r\n  query = {\r\n    q: 'user:nzbin',\r\n    sort: 'stars',\r\n    order: 'desc',\r\n    page: 0,\r\n    per_page: 10,\r\n  };\r\n\r\n  get params() {\r\n    const p = Object.assign({}, this.query);\r\n    p.page += 1;\r\n    return p;\r\n  }\r\n\r\n  constructor(private remoteSrv: TablesRemoteDataService, private cdr: ChangeDetectorRef) {}\r\n\r\n  ngOnInit() {\r\n    // this.getData();\r\n    this.isLoading= false;\r\n  }\r\n\r\n  getData() {\r\n    this.isLoading = true;\r\n\r\n    this.remoteSrv.getData(this.params).subscribe(\r\n      res => {\r\n        this.list = res.items;\r\n        this.total = res.total_count;\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      }\r\n    );\r\n  }\r\n\r\n  getNextPage(e: PageEvent) {\r\n    this.query.page = e.pageIndex;\r\n    this.query.per_page = e.pageSize;\r\n    this.getData();\r\n  }\r\n\r\n  search() {\r\n    this.query.page = 0;\r\n    this.getData();\r\n  }\r\n}\r\n\r\n","<page-header class=\"bg-blue-600\"></page-header>\r\n\r\n<div class=\"col-lg-12 stt\">\r\n    <button class=\"m-r-8\" mat-raised-button color=\"primary\" >ADD </button>\r\n    <button class=\"m-r-8\" mat-raised-button color=\"primary\" >RELOAD </button>\r\n</div>\r\n<form>\r\n  <mat-form-field class=\"m-r-8\">\r\n    <input matInput [(ngModel)]=\"query.q\" name=\"q\" placeholder=\"Query String\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"m-r-8\">\r\n    <mat-select [(ngModel)]=\"query.sort\" name=\"sort\" placeholder=\"Sort\">\r\n      <mat-option>-- None --</mat-option>\r\n      <mat-option value=\"stars\">stars</mat-option>\r\n      <mat-option value=\"forks\">forks</mat-option>\r\n      <mat-option value=\"updated\">updated</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"m-r-8\">\r\n    <mat-select [(ngModel)]=\"query.order\" name=\"order\" placeholder=\"Order\">\r\n      <mat-option>-- None --</mat-option>\r\n      <mat-option value=\"desc\">desc</mat-option>\r\n      <mat-option value=\"asc\">asc</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <button class=\"m-r-8\" mat-raised-button color=\"primary\" (click)=\"search()\">Search</button>\r\n</form>\r\n\r\n<mtx-grid [data]=\"list\"\r\n          [columns]=\"columns\"\r\n          [length]=\"total\"\r\n          [loading]=\"isLoading\"\r\n          [pageOnFront]=\"false\"\r\n          [pageIndex]=\"query.page\"\r\n          [pageSize]=\"query.per_page\"\r\n          [pageSizeOptions]=\"[5,10,20]\"\r\n          (page)=\"getNextPage($event)\">\r\n</mtx-grid>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AgentsComponent } from './agents/agents.component';\r\nimport { QueueComponent } from './queue/queue.component';\r\nimport { TiersComponent } from './tiers/tiers.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'queue', component: QueueComponent },\r\n  { path: 'agents', component: AgentsComponent },\r\n  { path: 'tiers', component:TiersComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CallCenterRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface RepoSearchList {\r\n  incomplete_results: boolean;\r\n  items: any[];\r\n  total_count: number;\r\n}\r\n\r\n@Injectable()\r\nexport class TablesRemoteDataService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getData(params = {}): Observable<RepoSearchList> {\r\n    return this.http.get<RepoSearchList>('https://api.github.com/search/repositories', { params });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}