{"version":3,"sources":["webpack:///src/app/routes/design/colors/colors.service.ts","webpack:///src/app/routes/design/icons/icons.service.ts","webpack:///src/app/routes/design/colors/colors.component.ts","webpack:///src/app/routes/design/colors/colors.component.html","webpack:///src/app/routes/design/design-routing.module.ts","webpack:///src/app/routes/design/design.module.ts","webpack:///src/app/routes/design/icons/icons.component.ts","webpack:///src/app/routes/design/icons/icons.component.html"],"names":["DesignColorsService","DesignIconsService","DesignColorsComponent","colorsSrv","colors","a","b","value","localeCompare","key","Object","keys","push","index","color","routes","path","component","DesignRoutingModule","forChild","COMPONENTS","COMPONENTS_DYNAMIC","DesignModule","DesignIconsComponent","iconsSrv","icons","icon"],"mappings":"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","file":"design-design-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DesignColorsService {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DesignIconsService {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { KeyValue } from '@angular/common';\r\n\r\nimport { DesignColorsService } from './colors.service';\r\nimport { MAT_COLORS } from '@shared';\r\n\r\n@Component({\r\n  selector: 'app-design-colors',\r\n  templateUrl: './colors.component.html',\r\n  providers: [DesignColorsService],\r\n})\r\nexport class DesignColorsComponent implements OnInit {\r\n  colors = [];\r\n\r\n  valueAscOrder(a: KeyValue<number, string>, b: KeyValue<number, string>): number {\r\n    return a.value.localeCompare(b.value);\r\n  }\r\n\r\n  keyAscOrder(a: KeyValue<number, string>, b: KeyValue<number, string>): number {\r\n    return a.key - b.key;\r\n  }\r\n\r\n  constructor(private colorsSrv: DesignColorsService) {}\r\n\r\n  ngOnInit() {\r\n    const colors = MAT_COLORS;\r\n    for (const key of Object.keys(colors)) {\r\n      this.colors.push({\r\n        key,\r\n        value: colors[key],\r\n      });\r\n    }\r\n  }\r\n\r\n  trackByColor(index: number, color: { key: string; value: {} }): string {\r\n    return color.key;\r\n  }\r\n}\r\n","<breadcrumb></breadcrumb>\r\n\r\n<div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\r\n  <div fxFlex.gt-md=\"20\" fxFlex.gt-sm=\"25\" fxFlex.gt-xs=\"50\" fxFlex=\"100\"\r\n       *ngFor=\"let color of colors; trackBy: trackByColor\">\r\n    <div class=\"b-1\">\r\n      <ng-container *ngFor=\"let hue of color.value | keyvalue: keyAscOrder; first as isFirst;\">\r\n        <div class=\"bg-{{color.key + '-' + hue.key}} text-{{color.value['contrast'][hue.key]}} p-8\"\r\n             *ngIf=\"hue.key.toString() !== 'contrast'\">\r\n          <span class=\"m-r-4 text-capitalize\" *ngIf=\"isFirst\">{{color.key}}</span>\r\n          <span>{{hue.key}}</span><span fxFlex></span><span>{{hue.value}}</span>\r\n        </div>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DesignColorsComponent } from './colors/colors.component';\r\nimport { DesignIconsComponent } from './icons/icons.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'colors', component: DesignColorsComponent },\r\n  { path: 'icons', component: DesignIconsComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DesignRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { DesignRoutingModule } from './design-routing.module';\r\n\r\nimport { DesignColorsComponent } from './colors/colors.component';\r\nimport { DesignIconsComponent } from './icons/icons.component';\r\n\r\nconst COMPONENTS = [DesignColorsComponent, DesignIconsComponent];\r\nconst COMPONENTS_DYNAMIC = [];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, DesignRoutingModule],\r\n  declarations: [...COMPONENTS, ...COMPONENTS_DYNAMIC],\r\n  entryComponents: COMPONENTS_DYNAMIC,\r\n})\r\nexport class DesignModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DesignIconsService } from './icons.service';\r\n\r\nimport { MAT_ICONS } from '@shared';\r\n\r\n@Component({\r\n  selector: 'app-design-icons',\r\n  templateUrl: './icons.component.html',\r\n  providers: [DesignIconsService],\r\n})\r\nexport class DesignIconsComponent implements OnInit {\r\n  icons: { [key: string]: string[] };\r\n\r\n  constructor(private iconsSrv: DesignIconsService) {}\r\n\r\n  ngOnInit() {\r\n    this.icons = MAT_ICONS;\r\n  }\r\n\r\n  trackByIcon(index: number, icon: { key: string; value: string[] }): string {\r\n    return icon.key;\r\n  }\r\n}\r\n","<page-header class=\"bg-purple-500\"></page-header>\r\n\r\n<ng-container *ngFor=\" let group of icons | keyvalue; trackBy: trackByIcon\">\r\n  <mat-card>\r\n    <mat-card-title class=\"mat-h1 f-w-300 text-capitalize m-b-16 text-gray-500\">{{group.key}}\r\n    </mat-card-title>\r\n    <mat-card-content>\r\n      <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\r\n        <div fxFlex.gt-md=\"11.11\" fxFlex.md=\"20\" fxFlex.sm=\"25\" fxFlex.xs=\"33.33\"\r\n             *ngFor=\"let icon of group.value\">\r\n          <div class=\"text-center\">\r\n            <mat-icon class=\"icon-36\">{{icon}}</mat-icon>\r\n            <p class=\"f-s-12\">{{icon}}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</ng-container>\r\n"]}