{"version":3,"sources":["webpack:///src/app/routes/forms/datetime/datetime.component.ts","webpack:///src/app/routes/forms/datetime/datetime.component.html","webpack:///src/app/routes/forms/select/select.component.ts","webpack:///src/app/routes/forms/select/select.component.html","webpack:///src/app/routes/forms/forms-routing.module.ts","webpack:///src/app/routes/forms/forms.module.ts","webpack:///src/app/routes/forms/select/edit/edit.component.ts","webpack:///src/app/routes/forms/select/edit/edit.component.html","webpack:///src/app/routes/forms/dynamic/dynamic.component.ts","webpack:///src/app/routes/forms/dynamic/dynamic.component.html","webpack:///src/app/routes/forms/elements/elements.component.ts","webpack:///src/app/routes/forms/elements/elements.component.html","webpack:///src/app/routes/forms/data.service.ts"],"names":["FormsDatetimeComponent","fb","dateAdapter","translate","type","today","tomorrow","date","min","clone","year","month","hour","minute","max","start","filter","DATE","HOUR","MINUTE","group","dateTime","Date","required","dateTimeYear","time","timeAMPM","mintest","filtertest","touch","translateSubscription","onLangChange","subscribe","res","setLocale","lang","unsubscribe","FormsSelectComponent","dataService","dialog","people","selectedPersonId","selectedPersonId2","selectedSimpleItem","simpleItems","disable","selectedCarId","cars","id","name","disabled","companies","loading","companiesNames","selectedCompany","selectedCompanyCustom","selectedCompanyCustomPromise","people$","getPeople","items","forEach","c","i","push","car","tag","Promise","resolve","setTimeout","valid","open","autoFocus","toggleDisabled","openDialog","routes","path","component","FormsRoutingModule","forChild","COMPONENTS","COMPONENTS_DYNAMIC","FormsModule","FormsSelectEditComponent","dialogRef","data","defaultBindingsList","value","label","selectedCity","FormsDynamicComponent","toastr","form","model","email","fields","key","templateOptions","placeholder","expressionProperties","form2","model2","options","fields2","fieldGroupClassName","fieldGroup","className","labelProp","valueProp","description","wrappers","pattern","showToast","obj","success","JSON","stringify","submit","submit2","FormsElementsComponent","q","username","gender","reactiveForm1","mobile","city","address","company","tele","website","reactiveForm2","get","hasError","DataService","http","term","pipe","rsp","getMockPeople","x","toLocaleLowerCase","indexOf","index","isActive","picture","age","phone"],"mappings":"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","file":"forms-forms-module-es5.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { MatDatetimepickerFilterType } from '@mat-datetimepicker/core';\r\nimport * as moment from 'moment';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-forms-datetime',\r\n  templateUrl: './datetime.component.html',\r\n  styleUrls: ['./datetime.component.scss'],\r\n})\r\nexport class FormsDatetimeComponent implements OnInit, OnDestroy {\r\n  type = 'moment';\r\n\r\n  group: FormGroup;\r\n  today: moment.Moment;\r\n  tomorrow: moment.Moment;\r\n  min: moment.Moment;\r\n  max: moment.Moment;\r\n  start: moment.Moment;\r\n  filter: (date: moment.Moment, type: MatDatetimepickerFilterType) => boolean;\r\n\r\n  translateSubscription: Subscription;\r\n\r\n  constructor(\r\n    fb: FormBuilder,\r\n    private dateAdapter: DateAdapter<any>,\r\n    private translate: TranslateService\r\n  ) {\r\n    this.today = moment.utc();\r\n    this.tomorrow = moment.utc().date(moment.utc().date() + 1);\r\n    this.min = this.today.clone().year(2018).month(10).date(3).hour(11).minute(10);\r\n    this.max = this.min.clone().date(4).minute(45);\r\n    this.start = this.today.clone().year(1930).month(9).date(28);\r\n    this.filter = (date: moment.Moment, type: MatDatetimepickerFilterType) => {\r\n      switch (type) {\r\n        case MatDatetimepickerFilterType.DATE:\r\n          return date.year() % 2 === 0 && date.month() % 2 === 0 && date.date() % 2 === 0;\r\n        case MatDatetimepickerFilterType.HOUR:\r\n          return date.hour() % 2 === 0;\r\n        case MatDatetimepickerFilterType.MINUTE:\r\n          return date.minute() % 2 === 0;\r\n      }\r\n    };\r\n\r\n    this.group = fb.group({\r\n      dateTime: [new Date('2017-11-09T12:10:00.000Z'), Validators.required],\r\n      dateTimeYear: [new Date('2017-11-09T12:10:00.000Z'), Validators.required],\r\n      date: [null, Validators.required],\r\n      time: [null, Validators.required],\r\n      timeAMPM: [null, Validators.required],\r\n      month: [null, Validators.required],\r\n      year: [null, Validators.required],\r\n      mintest: [this.today, Validators.required],\r\n      filtertest: [this.today, Validators.required],\r\n      touch: [null, Validators.required],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.translateSubscription = this.translate.onLangChange.subscribe((res: { lang: any }) => {\r\n      this.dateAdapter.setLocale(res.lang);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.translateSubscription.unsubscribe();\r\n  }\r\n}\r\n","<page-header></page-header>\r\n\r\n<p>\r\n  The following examples use\r\n  <a href=\"https://github.com/kuhnroyal/mat-datetimepicker\" target=\"_blank\">\r\n    <code>mat-datetimepicker</code>\r\n  </a> component.\r\n</p>\r\n\r\n<mat-card>\r\n  <mat-card-title>Date types with: {{ type }}</mat-card-title>\r\n\r\n  <form [formGroup]=\"group\">\r\n    <mat-form-field>\r\n      <mat-placeholder>DateTime</mat-placeholder>\r\n      <mat-datetimepicker-toggle [for]=\"datetimePicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #datetimePicker [openOnFocus]=\"true\" startView=\"month\" [timeInterval]=\"5\"\r\n                          type=\"datetime\"></mat-datetimepicker>\r\n      <input [matDatetimepicker]=\"datetimePicker\" [max]=\"tomorrow\" [min]=\"today\"\r\n             autocomplete=\"false\" formControlName=\"dateTime\" matInput required>\r\n      <mat-error *ngIf=\"group.get('dateTime').errors?.required\">\r\n        {{'validations.required' | translate}}\r\n      </mat-error>\r\n      <mat-error *ngIf=\"group.get('dateTime').errors?.matDatepickerMin\">min</mat-error>\r\n      <mat-error *ngIf=\"group.get('dateTime').errors?.matDatepickerMax\">max</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>DateTime Year selector</mat-placeholder>\r\n      <mat-datetimepicker-toggle [for]=\"datetimeYearPicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #datetimeYearPicker [multiYearSelector]=\"true\" [openOnFocus]=\"true\"\r\n                          startView=\"month\" [timeInterval]=\"5\" type=\"datetime\"></mat-datetimepicker>\r\n      <input [matDatetimepicker]=\"datetimeYearPicker\" [max]=\"tomorrow\" [min]=\"today\"\r\n             autocomplete=\"false\" formControlName=\"dateTimeYear\" matInput required>\r\n      <mat-error *ngIf=\"group.get('dateTimeYear').errors?.required\">\r\n        {{'validations.required' | translate}}\r\n      </mat-error>\r\n      <mat-error *ngIf=\"group.get('dateTimeYear').errors?.matDatepickerMin\">min</mat-error>\r\n      <mat-error *ngIf=\"group.get('dateTimeYear').errors?.matDatepickerMax\">max</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>Time</mat-placeholder>\r\n      <mat-datetimepicker-toggle [for]=\"timePicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #timePicker [openOnFocus]=\"true\" [timeInterval]=\"5\" type=\"time\">\r\n      </mat-datetimepicker>\r\n      <input [matDatetimepicker]=\"timePicker\" formControlName=\"time\" matInput required>\r\n      <mat-error *ngIf=\"group.get('time').errors?.required\">\r\n        {{'validations.required' | translate}}\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>Time AM/PM</mat-placeholder>\r\n      <mat-datetimepicker-toggle [for]=\"timeAMPMPicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #timeAMPMPicker [openOnFocus]=\"true\" [timeInterval]=\"5\"\r\n                          [twelvehour]=\"true\" type=\"time\"></mat-datetimepicker>\r\n      <input [matDatetimepicker]=\"timeAMPMPicker\" formControlName=\"timeAMPM\" matInput required>\r\n      <mat-error *ngIf=\"group.get('timeAMPM').errors?.required\">\r\n        {{'validations.required' | translate}}\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>Date</mat-placeholder>\r\n      <mat-datetimepicker-toggle [for]=\"datePicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #datePicker [openOnFocus]=\"true\" type=\"date\"></mat-datetimepicker>\r\n      <input [matDatetimepicker]=\"datePicker\" formControlName=\"date\" matInput required>\r\n      <mat-error *ngIf=\"group.get('date').errors?.required\">\r\n        {{'validations.required' | translate}}\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>Month</mat-placeholder>\r\n      <mat-datetimepicker-toggle [for]=\"monthPicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #monthPicker mode=\"portrait\" [openOnFocus]=\"true\" type=\"month\">\r\n      </mat-datetimepicker>\r\n      <input [matDatetimepicker]=\"monthPicker\" formControlName=\"month\" matInput required>\r\n      <mat-error *ngIf=\"group.get('month').errors?.required\">\r\n        {{'validations.required' | translate}}\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>Year</mat-placeholder>\r\n      <mat-datetimepicker-toggle [for]=\"yearPicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #yearPicker [openOnFocus]=\"true\" type=\"year\"></mat-datetimepicker>\r\n      <input [matDatetimepicker]=\"yearPicker\" formControlName=\"year\" matInput required>\r\n      <mat-error *ngIf=\"group.get('year').errors?.required\">\r\n        {{'validations.required' | translate}}\r\n      </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>Min/Max Test</mat-placeholder>\r\n      <input [matDatetimepicker]=\"minTestPicker\" [max]=\"max\" [min]=\"min\" formControlName=\"mintest\"\r\n             matInput required>\r\n      <mat-datetimepicker-toggle [for]=\"minTestPicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #minTestPicker mode=\"landscape\" [openOnFocus]=\"true\" [timeInterval]=\"5\"\r\n                          type=\"datetime\"></mat-datetimepicker>\r\n      <mat-error *ngIf=\"group.get('mintest').errors?.required\">\r\n        {{'validations.required' | translate}}\r\n      </mat-error>\r\n      <mat-error *ngIf=\"group.get('mintest').errors?.matDatepickerMin\">min</mat-error>\r\n      <mat-error *ngIf=\"group.get('mintest').errors?.matDatepickerMax\">max</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>Filter Test</mat-placeholder>\r\n      <input [matDatepickerFilter]=\"filter\" [matDatetimepicker]=\"filterTestPicker\"\r\n             formControlName=\"filtertest\" matInput required>\r\n      <mat-datetimepicker-toggle [for]=\"filterTestPicker\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #filterTestPicker mode=\"landscape\" [openOnFocus]=\"true\" [timeInterval]=\"5\"\r\n                          type=\"datetime\"></mat-datetimepicker>\r\n      <mat-error *ngIf=\"group.get('filtertest').errors?.required\">\r\n        {{'validations.required' | translate}}\r\n      </mat-error>\r\n      <mat-error *ngIf=\"group.get('filtertest').errors?.matDatepickerFilter\">filter</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <mat-placeholder>TouchUi</mat-placeholder>\r\n      <input [matDatetimepicker]=\"touch\" [min]=\"min\" formControlName=\"touch\" matInput required>\r\n      <mat-datetimepicker-toggle [for]=\"touch\" matSuffix></mat-datetimepicker-toggle>\r\n      <mat-datetimepicker #touch mode=\"portrait\" [openOnFocus]=\"true\" [timeInterval]=\"5\"\r\n                          [touchUi]=\"true\" type=\"datetime\"></mat-datetimepicker>\r\n    </mat-form-field>\r\n  </form>\r\n\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\nimport { Person, DataService } from '../data.service';\r\nimport { FormsSelectEditComponent } from './edit/edit.component';\r\n\r\n@Component({\r\n  selector: 'app-forms-selects',\r\n  templateUrl: './select.component.html',\r\n  providers: [DataService],\r\n})\r\nexport class FormsSelectComponent implements OnInit {\r\n  // Data source\r\n  people$: Observable<Person[]>;\r\n  people: Person[] = [];\r\n  selectedPersonId = '5a15b13c36e7a7f00cf0d7cb';\r\n  selectedPersonId2 = '5a15b13c36e7a7f00cf0d7cb';\r\n\r\n  selectedSimpleItem = 'Two';\r\n  simpleItems = [];\r\n  disable = true;\r\n\r\n  selectedCarId = 3;\r\n  cars = [\r\n    { id: 1, name: 'Volvo' },\r\n    { id: 2, name: 'Saab', disabled: true },\r\n    { id: 3, name: 'Opel' },\r\n    { id: 4, name: 'Audi' },\r\n  ];\r\n\r\n  // Tags\r\n  companies: any[] = [];\r\n  loading = false;\r\n  companiesNames = ['Miškas', 'Žalias', 'Flexigen'];\r\n  selectedCompany = '';\r\n  selectedCompanyCustom = '';\r\n  selectedCompanyCustomPromise = '';\r\n\r\n  constructor(private dataService: DataService, public dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n    this.people$ = this.dataService.getPeople();\r\n    this.dataService.getPeople().subscribe(items => (this.people = items));\r\n    this.simpleItems = [true, 'Two', 3];\r\n\r\n    this.companiesNames.forEach((c, i) => {\r\n      this.companies.push({ id: i, name: c });\r\n    });\r\n  }\r\n\r\n  toggleDisabled() {\r\n    const car: any = this.cars[1];\r\n    car.disabled = !car.disabled;\r\n  }\r\n\r\n  addTag(name: string) {\r\n    return { name, tag: true };\r\n  }\r\n\r\n  addTagPromise(name: string) {\r\n    return new Promise(resolve => {\r\n      this.loading = true;\r\n      setTimeout(() => {\r\n        resolve({ id: 5, name, valid: true });\r\n        this.loading = false;\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  openDialog() {\r\n    this.dialog.open(FormsSelectEditComponent, {\r\n      autoFocus: false,\r\n    });\r\n  }\r\n}\r\n","<page-header></page-header>\r\n\r\n<div class=\"m-b-16\">\r\n  The following examples use\r\n  <a href=\"https://ng-matero.github.io/extensions/select\" target=\"_blank\">\r\n    <code>mtx-select</code></a> component of\r\n  <a href=\"https://ng-matero.github.io/extensions/\" target=\"_blank\">Material Extensions\r\n  </a>, it is a Material form field wrapper of <code>ng-select</code>.\r\n</div>\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n  <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"matero-col\">\r\n    <mat-card>\r\n      <mat-card-title>Data Source</mat-card-title>\r\n      <div>\r\n        <p>\r\n          Most common case is showing data from backend API and with mtx-select this is extremely\r\n          simple since you can bind directly to observable when using angular <b> | async</b> pipe.\r\n        </p>\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>select person</mat-label>\r\n          <mtx-select [items]=\"people$ | async\" bindLabel=\"name\" bindValue=\"id\" autofocus\r\n                      [(ngModel)]=\"selectedPersonId\">\r\n          </mtx-select>\r\n        </mat-form-field>\r\n        Selected: {{selectedPersonId}}\r\n        <mat-divider class=\"m-y-16\" inset></mat-divider>\r\n\r\n        <p>\r\n          You can also set array of objects as items input.\r\n        </p>\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>select person</mat-label>\r\n          <mtx-select [items]=\"people\" bindLabel=\"name\" bindValue=\"id\"\r\n                      [(ngModel)]=\"selectedPersonId2\">\r\n          </mtx-select>\r\n        </mat-form-field>\r\n        Selected: {{selectedPersonId2}}\r\n        <mat-divider class=\"m-y-16\" inset></mat-divider>\r\n\r\n        <p>\r\n          While array of objects is the most common items source, you may want to set simple array\r\n          of strings, numbers, booleans.\r\n        </p>\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>select person</mat-label>\r\n          <mtx-select [items]=\"simpleItems\" [(ngModel)]=\"selectedSimpleItem\">\r\n          </mtx-select>\r\n        </mat-form-field>\r\n        Selected: {{selectedSimpleItem | json}}\r\n        <mat-divider class=\"m-y-16\" inset></mat-divider>\r\n\r\n        <p>\r\n          If you have simple use case, you can omit items array and bind options directly in html\r\n          using <b>ng-option</b> component.\r\n        </p>\r\n        <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"toggleDisabled()\"\r\n                class=\"m-b-8\">\r\n          Toggle option[1] disabled\r\n        </button>\r\n\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Select car</mat-label>\r\n          <mtx-select [(ngModel)]=\"selectedCarId\">\r\n            <mtx-option *ngFor=\"let car of cars\" [value]=\"car.id\" [disabled]=\"car.disabled\">\r\n              {{car.name}}\r\n            </mtx-option>\r\n            <mtx-option [value]=\"'custom'\">Custom</mtx-option>\r\n          </mtx-select>\r\n        </mat-form-field>\r\n\r\n        Selected car ID: {{selectedCarId | json}}\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"matero-col\">\r\n    <mat-card>\r\n      <mat-card-title>Tags</mat-card-title>\r\n      <div>\r\n        <label>Default tags</label>\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Select item</mat-label>\r\n          <mtx-select [items]=\"[]\" [addTag]=\"true\" [(ngModel)]=\"selectedCompany\">\r\n          </mtx-select>\r\n        </mat-form-field>\r\n\r\n        <p>\r\n          Selected value: {{selectedCompany | json}}\r\n        </p>\r\n        <mat-divider class=\"m-y-16\" inset></mat-divider>\r\n\r\n        <label>Custom tags</label>\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Select item</mat-label>\r\n          <mtx-select [items]=\"companies\" [addTag]=\"addTag\" [hideSelected]=\"true\" [multiple]=\"true\"\r\n                      bindLabel=\"name\" [(ngModel)]=\"selectedCompanyCustom\">\r\n          </mtx-select>\r\n        </mat-form-field>\r\n\r\n        <p>\r\n          Selected value: {{selectedCompanyCustom | json}}\r\n        </p>\r\n\r\n        <mat-divider class=\"m-y-16\" inset></mat-divider>\r\n\r\n        <label>Server side tags</label>\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Select item</mat-label>\r\n          <mtx-select [items]=\"companies\" [addTag]=\"addTagPromise\" [multiple]=\"true\"\r\n                      bindLabel=\"name\" [loading]=\"loading\"\r\n                      [(ngModel)]=\"selectedCompanyCustomPromise\">\r\n            <ng-template ng-tag-tmp let-search=\"searchTerm\">\r\n              <b>create new</b>: {{search}}\r\n            </ng-template>\r\n          </mtx-select>\r\n        </mat-form-field>\r\n\r\n        <mat-divider class=\"m-y-16\" inset></mat-divider>\r\n\r\n        <label>Tagging without dropdown. Press enter to add item</label>\r\n        <mat-form-field class=\"w-full\">\r\n          <mat-label>Select item</mat-label>\r\n          <mtx-select [items]=\"[]\" [addTag]=\"true\" [multiple]=\"true\" [selectOnTab]=\"true\"\r\n                      [isOpen]=\"false\">\r\n          </mtx-select>\r\n        </mat-form-field>\r\n\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex=\"100\" fxFlex.gt-sm=\"50\" class=\"matero-col\">\r\n    <mat-card>\r\n      <mat-card-title>Select in dialog</mat-card-title>\r\n\r\n      <p>Test ng-select in a dialog.</p>\r\n      <button mat-raised-button color=\"primary\" (click)=\"openDialog()\">Open Dialog</button>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FormsElementsComponent } from './elements/elements.component';\r\nimport { FormsSelectComponent } from './select/select.component';\r\nimport { FormsDynamicComponent } from './dynamic/dynamic.component';\r\nimport { FormsDatetimeComponent } from './datetime/datetime.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'elements', component: FormsElementsComponent },\r\n  { path: 'dynamic', component: FormsDynamicComponent },\r\n  { path: 'select', component: FormsSelectComponent },\r\n  { path: 'datetime', component: FormsDatetimeComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FormsRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { FormsRoutingModule } from './forms-routing.module';\r\n\r\nimport { FormsElementsComponent } from './elements/elements.component';\r\nimport { FormsSelectComponent } from './select/select.component';\r\nimport { FormsDynamicComponent } from './dynamic/dynamic.component';\r\nimport { FormsDatetimeComponent } from './datetime/datetime.component';\r\nimport { FormsSelectEditComponent } from './select/edit/edit.component';\r\n\r\nconst COMPONENTS = [\r\n  FormsElementsComponent,\r\n  FormsSelectComponent,\r\n  FormsDynamicComponent,\r\n  FormsDatetimeComponent,\r\n];\r\nconst COMPONENTS_DYNAMIC = [FormsSelectEditComponent];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, FormsRoutingModule],\r\n  declarations: [...COMPONENTS, ...COMPONENTS_DYNAMIC],\r\n  entryComponents: COMPONENTS_DYNAMIC,\r\n})\r\nexport class FormsModule {}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-forms-select-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.scss'],\r\n})\r\nexport class FormsSelectEditComponent implements OnInit {\r\n  defaultBindingsList = [\r\n    { value: 1, label: 'Vilnius' },\r\n    { value: 2, label: 'Kaunas' },\r\n    { value: 3, label: 'Pavilnys', disabled: true },\r\n  ];\r\n\r\n  selectedCity = null;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormsSelectEditComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<p>\r\n  By default dropdown panel is rendered as child element of ng-select, but you can append dropdown\r\n  to any element using <strong>appendTo</strong>.\r\n</p>\r\n<p>\r\n  If you place ng-select inside container with fixed height and hidden overflow then dropdown will\r\n  not be fully visible.\r\n</p>\r\n\r\n<mat-form-field>\r\n  <mat-label>Without appendTo</mat-label>\r\n  <mtx-select [items]=\"defaultBindingsList\"\r\n              [(ngModel)]=\"selectedCity\">\r\n  </mtx-select>\r\n</mat-form-field>\r\n\r\n<mat-form-field class=\"m-x-8\">\r\n  <mat-label>With appendTo</mat-label>\r\n  <mtx-select [items]=\"defaultBindingsList\"\r\n              [(ngModel)]=\"selectedCity\"\r\n              [appendTo]=\"'app-admin-layout'\">\r\n  </mtx-select>\r\n</mat-form-field>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-forms-dynamic',\r\n  templateUrl: './dynamic.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FormsDynamicComponent implements OnInit {\r\n  form = new FormGroup({});\r\n  model = { email: 'email@gmail.com' };\r\n  fields: FormlyFieldConfig[] = [\r\n    {\r\n      key: 'text',\r\n      type: 'input',\r\n      templateOptions: {\r\n        label: 'Text',\r\n        placeholder: 'Type here to see the other field become enabled...',\r\n        required: true,\r\n      },\r\n    },\r\n    {\r\n      key: 'text2',\r\n      type: 'input',\r\n      templateOptions: {\r\n        label: 'Hey!',\r\n        placeholder: 'This one is disabled if there is no text in the other input',\r\n      },\r\n      expressionProperties: {\r\n        'templateOptions.disabled': '!model.text',\r\n      },\r\n    },\r\n    {\r\n      key: 'email',\r\n      type: 'input',\r\n      templateOptions: {\r\n        label: 'Email address',\r\n        placeholder: 'Enter email',\r\n        required: true,\r\n      },\r\n    },\r\n  ];\r\n\r\n  // Advanced Layout\r\n  form2 = new FormGroup({});\r\n  model2: any = {};\r\n  options: FormlyFormOptions = {};\r\n\r\n  fields2: FormlyFieldConfig[] = [\r\n    {\r\n      fieldGroupClassName: 'row',\r\n      fieldGroup: [\r\n        {\r\n          className: 'col-sm-6',\r\n          type: 'input',\r\n          key: 'firstName',\r\n          templateOptions: {\r\n            label: 'First Name',\r\n            required: true,\r\n          },\r\n        },\r\n        {\r\n          className: 'col-sm-6',\r\n          type: 'input',\r\n          key: 'lastName',\r\n          templateOptions: {\r\n            label: 'Last Name',\r\n            required: true,\r\n          },\r\n          expressionProperties: {\r\n            'templateOptions.disabled': '!model.firstName',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      fieldGroupClassName: 'row',\r\n      fieldGroup: [\r\n        {\r\n          className: 'col-sm-6',\r\n          type: 'input',\r\n          key: 'street',\r\n          templateOptions: {\r\n            label: 'Street',\r\n          },\r\n        },\r\n        {\r\n          className: 'col-sm-3',\r\n          type: 'combobox',\r\n          key: 'cityId',\r\n          templateOptions: {\r\n            label: 'City',\r\n            options: [\r\n              { id: 1, name: '北京' },\r\n              { id: 2, name: '上海' },\r\n              { id: 3, name: '广州' },\r\n              { id: 4, name: '深圳' },\r\n            ],\r\n            labelProp: 'name',\r\n            valueProp: 'id',\r\n            required: true,\r\n            description: 'This is a custom field type.',\r\n          },\r\n          wrappers: ['form-field'],\r\n        },\r\n        {\r\n          className: 'col-sm-3',\r\n          type: 'input',\r\n          key: 'zip',\r\n          templateOptions: {\r\n            type: 'number',\r\n            label: 'Zip',\r\n            max: 99999,\r\n            min: 0,\r\n            pattern: '\\\\d{5}',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      type: 'textarea',\r\n      key: 'otherInput',\r\n      templateOptions: {\r\n        label: 'Other Input',\r\n      },\r\n    },\r\n    {\r\n      type: 'checkbox',\r\n      key: 'otherToo',\r\n      templateOptions: {\r\n        label: 'Other Checkbox',\r\n      },\r\n    },\r\n  ];\r\n\r\n  constructor(private toastr: ToastrService) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  submit() {\r\n    if (this.form.valid) {\r\n      this.showToast(this.model);\r\n    }\r\n  }\r\n\r\n  submit2() {\r\n    if (this.form2.valid) {\r\n      this.showToast(this.model2);\r\n    }\r\n  }\r\n\r\n  showToast(obj: any) {\r\n    this.toastr.success(JSON.stringify(obj));\r\n  }\r\n}\r\n","<page-header></page-header>\r\n\r\n<p>\r\n  The dynamic forms are powered by\r\n  <a href=\"https://github.com/ngx-formly/ngx-formly\" target=\"_blank\">\r\n    <code>ngx-formly</code>\r\n  </a>.\r\n</p>\r\n\r\n<mat-card>\r\n  <mat-card-title>Simple</mat-card-title>\r\n\r\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n    <formly-form [form]=\"form\" [fields]=\"fields\" [model]=\"model\"></formly-form>\r\n    <button mat-raised-button color=\"primary\">Submit</button>\r\n  </form>\r\n</mat-card>\r\n\r\n<mat-card>\r\n  <mat-card-title>Advanced Layout</mat-card-title>\r\n\r\n  <form [formGroup]=\"form2\" (ngSubmit)=\"submit2()\">\r\n    <formly-form [model]=\"model2\" [fields]=\"fields2\" [options]=\"options\" [form]=\"form2\">\r\n    </formly-form>\r\n    <button mat-raised-button color=\"primary\" [disabled]=\"!form2.valid\">Submit</button>\r\n  </form>\r\n</mat-card>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DateAdapter } from '@angular/material/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-forms-elements',\r\n  templateUrl: './elements.component.html',\r\n})\r\nexport class FormsElementsComponent implements OnInit, OnDestroy {\r\n  q = {\r\n    username: '',\r\n    email: '',\r\n    gender: '',\r\n  };\r\n\r\n  reactiveForm1: FormGroup;\r\n  reactiveForm2: FormGroup;\r\n\r\n  translateSubscription: Subscription;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private dateAdapter: DateAdapter<any>,\r\n    private translate: TranslateService\r\n  ) {\r\n    this.reactiveForm1 = this.fb.group({\r\n      username: ['', [Validators.required]],\r\n      gender: ['', [Validators.required]],\r\n      mobile: ['', [Validators.required]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      city: [''],\r\n      address: [''],\r\n      company: [''],\r\n      tele: [''],\r\n      website: [''],\r\n      date: [''],\r\n    });\r\n\r\n    this.reactiveForm2 = this.fb.group({\r\n      username: ['', [Validators.required]],\r\n      gender: ['', [Validators.required]],\r\n      mobile: ['', [Validators.required]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      city: [''],\r\n      address: [''],\r\n      company: [''],\r\n      tele: [''],\r\n      website: [''],\r\n      date: [''],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.translateSubscription = this.translate.onLangChange.subscribe((res: { lang: any }) => {\r\n      this.dateAdapter.setLocale(res.lang);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.translateSubscription.unsubscribe();\r\n  }\r\n\r\n  getErrorMessage(form: FormGroup) {\r\n    return form.get('email').hasError('required')\r\n      ? 'validations.required'\r\n      : form.get('email').hasError('email')\r\n      ? 'validations.invalid_email'\r\n      : '';\r\n  }\r\n}\r\n","<page-header></page-header>\r\n\r\n<div fxLayout=\"row wrap\" class=\"matero-row\">\r\n  <div fxFlex=\"100\" class=\"matero-col\">\r\n    <mat-card>\r\n      <mat-card-title>Form Inline</mat-card-title>\r\n\r\n      <form>\r\n        <mat-form-field class=\"m-r-8\">\r\n          <input matInput placeholder=\"Username\" [(ngModel)]=\"q.username\" name=\"username\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"m-r-8\">\r\n          <input matInput placeholder=\"Email\" [(ngModel)]=\"q.email\" name=\"email\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"m-r-8\">\r\n          <mat-label>Gender</mat-label>\r\n          <mat-select [(ngModel)]=\"q.gender\" name=\"gender\">\r\n            <mat-option>-- None --</mat-option>\r\n            <mat-option value=\"1\">male</mat-option>\r\n            <mat-option value=\"2\">female</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <button mat-raised-button color=\"primary\">Search</button>\r\n      </form>\r\n\r\n    </mat-card>\r\n  </div>\r\n  <div fxFlex=\"33.33\" fxFlex.lt-sm=\"100\" class=\"matero-col\">\r\n    <mat-card>\r\n      <mat-card-title>Form Horizontal</mat-card-title>\r\n\r\n      <form [formGroup]=\"reactiveForm1\" class=\"form-field-full\">\r\n        <mat-form-field>\r\n          <mat-label>Username</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" formControlName=\"username\" required>\r\n          <mat-error *ngIf=\"reactiveForm1.get('username').invalid\">\r\n            {{'validations.required' | translate}}\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Gender</mat-label>\r\n          <mat-select required formControlName=\"gender\" required>\r\n            <mat-option>-- None --</mat-option>\r\n            <mat-option value=\"1\">male</mat-option>\r\n            <mat-option value=\"2\">female</mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"reactiveForm1.get('gender').invalid\">\r\n            {{'validations.required' | translate}}\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Mobile</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" type=\"number\" formControlName=\"mobile\"\r\n                 required>\r\n          <mat-icon matSuffix>smartphone</mat-icon>\r\n          <mat-error *ngIf=\"reactiveForm1.get('mobile').invalid\">\r\n            {{'validations.required' | translate}}\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Email</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" formControlName=\"email\" required>\r\n          <mat-error *ngIf=\"reactiveForm1.get('email').invalid\">\r\n            {{getErrorMessage(reactiveForm1) | translate}}\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>City</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" formControlName=\"city\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Address</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" formControlName=\"address\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Company</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" formControlName=\"company\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Tele</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" type=\"number\" formControlName=\"tele\">\r\n          <mat-icon matSuffix>phone</mat-icon>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-label>Website</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\" formControlName=\"website\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\"\r\n                 formControlName=\"date\">\r\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n          <mat-datepicker #picker></mat-datepicker>\r\n        </mat-form-field>\r\n\r\n        <button mat-raised-button color=\"primary\" class=\"m-t-8\">Save</button>\r\n      </form>\r\n\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div fxFlex=\"66.67\" fxFlex.lt-sm=\"100\" class=\"matero-col\">\r\n    <mat-card>\r\n      <mat-card-title>Form Horizontal</mat-card-title>\r\n\r\n      <form [formGroup]=\"reactiveForm2\" class=\"form-field-full\">\r\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"8px grid\">\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Username</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"username\"\r\n                     required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('username').invalid\">\r\n                {{'validations.required' | translate}}\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Gender</mat-label>\r\n              <mat-select required formControlName=\"gender\" required>\r\n                <mat-option>-- None --</mat-option>\r\n                <mat-option value=\"1\">male</mat-option>\r\n                <mat-option value=\"2\">female</mat-option>\r\n              </mat-select>\r\n              <mat-error *ngIf=\"reactiveForm2.get('gender').invalid\">\r\n                {{'validations.required' | translate}}\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Mobile</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" type=\"number\"\r\n                     formControlName=\"mobile\" required>\r\n              <mat-icon matSuffix>smartphone</mat-icon>\r\n              <mat-error *ngIf=\"reactiveForm2.get('mobile').invalid\">\r\n                {{'validations.required' | translate}}\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Email</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"email\" required>\r\n              <mat-error *ngIf=\"reactiveForm2.get('email').invalid\">\r\n                {{getErrorMessage(reactiveForm2) | translate}}\r\n              </mat-error>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>City</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"city\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Address</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"address\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Company</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"company\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Tele</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" type=\"number\" formControlName=\"tele\">\r\n              <mat-icon matSuffix>phone</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <mat-label>Website</mat-label>\r\n              <input matInput placeholder=\"Simple placeholder\" formControlName=\"website\">\r\n            </mat-form-field>\r\n          </div>\r\n\r\n          <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n            <mat-form-field>\r\n              <input matInput [matDatepicker]=\"picker2\" placeholder=\"Choose a date\"\r\n                     formControlName=\"date\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n              <mat-datepicker #picker2></mat-datepicker>\r\n            </mat-form-field>\r\n          </div>\r\n          \r\n\r\n        </div>\r\n\r\n        <button mat-raised-button color=\"primary\" class=\"m-t-8\">Save</button>\r\n      </form>\r\n\r\n    </mat-card>\r\n  </div>\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { delay, map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nexport interface Person {\r\n  id: string;\r\n  isActive: boolean;\r\n  age: number;\r\n  name: string;\r\n  gender: string;\r\n  company: string;\r\n  email: string;\r\n  phone: string;\r\n  disabled?: boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getGithubAccounts(term: string = null) {\r\n    if (term) {\r\n      return this.http\r\n        .get<any>(`https://api.github.com/search/users?q=${term}`)\r\n        .pipe(map(rsp => rsp.items));\r\n    } else {\r\n      return of([]);\r\n    }\r\n  }\r\n\r\n  getAlbums() {\r\n    return this.http.get<any[]>('https://jsonplaceholder.typicode.com/albums');\r\n  }\r\n\r\n  getPhotos() {\r\n    return this.http.get<any[]>('https://jsonplaceholder.typicode.com/photos');\r\n  }\r\n\r\n  getPeople(term: string = null): Observable<Person[]> {\r\n    let items = getMockPeople();\r\n    if (term) {\r\n      items = items.filter(x => x.name.toLocaleLowerCase().indexOf(term.toLocaleLowerCase()) > -1);\r\n    }\r\n    return of(items).pipe(delay(500));\r\n  }\r\n}\r\n\r\nfunction getMockPeople() {\r\n  return [\r\n    {\r\n      id: '5a15b13c36e7a7f00cf0d7cb',\r\n      index: 2,\r\n      isActive: true,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 23,\r\n      name: 'Karyn Wright',\r\n      gender: 'female',\r\n      company: 'ZOLAR',\r\n      email: 'karynwright@zolar.com',\r\n      phone: '+1 (851) 583-2547',\r\n    },\r\n    {\r\n      id: '5a15b13c2340978ec3d2c0ea',\r\n      index: 3,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 35,\r\n      name: 'Rochelle Estes',\r\n      disabled: true,\r\n      gender: 'female',\r\n      company: 'EXTRAWEAR',\r\n      email: 'rochelleestes@extrawear.com',\r\n      phone: '+1 (849) 408-2029',\r\n    },\r\n    {\r\n      id: '5a15b13c663ea0af9ad0dae8',\r\n      index: 4,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 25,\r\n      name: 'Mendoza Ruiz',\r\n      gender: 'male',\r\n      company: 'ZYTRAX',\r\n      email: 'mendozaruiz@zytrax.com',\r\n      phone: '+1 (904) 536-2020',\r\n    },\r\n    {\r\n      id: '5a15b13cc9eeb36511d65acf',\r\n      index: 5,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 39,\r\n      name: 'Rosales Russell',\r\n      gender: 'male',\r\n      company: 'ELEMANTRA',\r\n      email: 'rosalesrussell@elemantra.com',\r\n      phone: '+1 (868) 473-3073',\r\n    },\r\n    {\r\n      id: '5a15b13c728cd3f43cc0fe8a',\r\n      index: 6,\r\n      isActive: true,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 32,\r\n      name: 'Marquez Nolan',\r\n      gender: 'male',\r\n      company: 'MIRACLIS',\r\n      disabled: true,\r\n      email: 'marqueznolan@miraclis.com',\r\n      phone: '+1 (853) 571-3921',\r\n    },\r\n    {\r\n      id: '5a15b13ca51b0aaf8a99c05a',\r\n      index: 7,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 28,\r\n      name: 'Franklin James',\r\n      gender: 'male',\r\n      company: 'CAXT',\r\n      email: 'franklinjames@caxt.com',\r\n      phone: '+1 (868) 539-2984',\r\n    },\r\n    {\r\n      id: '5a15b13cc3b9381ffcb1d6f7',\r\n      index: 8,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 24,\r\n      name: 'Elsa Bradley',\r\n      gender: 'female',\r\n      company: 'MATRIXITY',\r\n      email: 'elsabradley@matrixity.com',\r\n      phone: '+1 (994) 583-3850',\r\n    },\r\n    {\r\n      id: '5a15b13ce58cb6ff62c65164',\r\n      index: 9,\r\n      isActive: true,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 40,\r\n      name: 'Pearson Thompson',\r\n      gender: 'male',\r\n      company: 'EZENT',\r\n      email: 'pearsonthompson@ezent.com',\r\n      phone: '+1 (917) 537-2178',\r\n    },\r\n    {\r\n      id: '5a15b13c90b95eb68010c86e',\r\n      index: 10,\r\n      isActive: true,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 32,\r\n      name: 'Ina Pugh',\r\n      gender: 'female',\r\n      company: 'MANTRIX',\r\n      email: 'inapugh@mantrix.com',\r\n      phone: '+1 (917) 450-2372',\r\n    },\r\n    {\r\n      id: '5a15b13c2b1746e12788711f',\r\n      index: 11,\r\n      isActive: true,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 25,\r\n      name: 'Nguyen Elliott',\r\n      gender: 'male',\r\n      company: 'PORTALINE',\r\n      email: 'nguyenelliott@portaline.com',\r\n      phone: '+1 (905) 491-3377',\r\n    },\r\n    {\r\n      id: '5a15b13c605403381eec5019',\r\n      index: 12,\r\n      isActive: true,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 31,\r\n      name: 'Mills Barnett',\r\n      gender: 'male',\r\n      company: 'FARMEX',\r\n      email: 'millsbarnett@farmex.com',\r\n      phone: '+1 (882) 462-3986',\r\n    },\r\n    {\r\n      id: '5a15b13c67e2e6d1a3cd6ca5',\r\n      index: 13,\r\n      isActive: true,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 36,\r\n      name: 'Margaret Reynolds',\r\n      gender: 'female',\r\n      company: 'ROOFORIA',\r\n      email: 'margaretreynolds@rooforia.com',\r\n      phone: '+1 (935) 435-2345',\r\n    },\r\n    {\r\n      id: '5a15b13c947c836d177aa85c',\r\n      index: 14,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 29,\r\n      name: 'Yvette Navarro',\r\n      gender: 'female',\r\n      company: 'KINETICA',\r\n      email: 'yvettenavarro@kinetica.com',\r\n      phone: '+1 (807) 485-3824',\r\n    },\r\n    {\r\n      id: '5a15b13c5dbbe61245c1fb73',\r\n      index: 15,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 20,\r\n      name: 'Elisa Guzman',\r\n      gender: 'female',\r\n      company: 'KAGE',\r\n      email: 'elisaguzman@kage.com',\r\n      phone: '+1 (868) 594-2919',\r\n    },\r\n    {\r\n      id: '5a15b13c38fd49fefea8db80',\r\n      index: 16,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 33,\r\n      name: 'Jodie Bowman',\r\n      gender: 'female',\r\n      company: 'EMTRAC',\r\n      email: 'jodiebowman@emtrac.com',\r\n      phone: '+1 (891) 565-2560',\r\n    },\r\n    {\r\n      id: '5a15b13c9680913c470eb8fd',\r\n      index: 17,\r\n      isActive: false,\r\n      picture: 'http://placehold.it/32x32',\r\n      age: 24,\r\n      name: 'Diann Booker',\r\n      gender: 'female',\r\n      company: 'LYRIA',\r\n      email: 'diannbooker@lyria.com',\r\n      phone: '+1 (830) 555-3209',\r\n    },\r\n  ];\r\n}\r\n"]}