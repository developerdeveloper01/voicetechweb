{"version":3,"sources":["webpack:///src/app/routes/helpers/helpers.module.ts","webpack:///src/app/routes/helpers/helpers-routing.module.ts","webpack:///src/app/routes/helpers/css-class/css-class.component.html","webpack:///src/app/routes/helpers/css-class/css-class.component.ts"],"names":["COMPONENTS","COMPONENTS_DYNAMIC","HelpersModule","routes","path","component","HelpersRoutingModule","forChild","HelpersCssClassComponent","colorArr","split"],"mappings":"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","file":"helpers-helpers-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { HelpersRoutingModule } from './helpers-routing.module';\r\nimport { HelpersCssClassComponent } from './css-class/css-class.component';\r\n\r\nconst COMPONENTS = [HelpersCssClassComponent];\r\nconst COMPONENTS_DYNAMIC = [];\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    HelpersRoutingModule\r\n  ],\r\n  declarations: [\r\n    ...COMPONENTS,\r\n    ...COMPONENTS_DYNAMIC\r\n  ],\r\n  entryComponents: COMPONENTS_DYNAMIC\r\n})\r\nexport class HelpersModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HelpersCssClassComponent } from './css-class/css-class.component';\r\n\r\nconst routes: Routes = [{ path: 'css-class', component: HelpersCssClassComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class HelpersRoutingModule {}\r\n","<page-header></page-header>\r\n\r\n<mat-card class=\"p-0\">\r\n  <mat-tab-group>\r\n    <mat-tab label=\"Material\">\r\n      <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Typography</h3>\r\n            <mat-list-item><code>.mat-display-4</code></mat-list-item>\r\n            <mat-list-item><code>.mat-display-3</code></mat-list-item>\r\n            <mat-list-item><code>.mat-display-2</code></mat-list-item>\r\n            <mat-list-item><code>.mat-display-1</code></mat-list-item>\r\n\r\n            <mat-list-item><code>.mat-h1</code>, <code>.mat-headline</code>\r\n            </mat-list-item>\r\n            <mat-list-item><code>.mat-h2</code>, <code>.mat-title</code></mat-list-item>\r\n            <mat-list-item><code>.mat-h3</code>, <code>.mat-subheading-2</code>\r\n            </mat-list-item>\r\n            <mat-list-item><code>.mat-h4</code>, <code>.mat-subheading-1</code>\r\n            </mat-list-item>\r\n\r\n            <mat-list-item><code>.mat-body</code>, <code>.mat-body-1</code>\r\n            </mat-list-item>\r\n            <mat-list-item><code>.mat-body-strong</code>, <code>.mat-body-2</code>\r\n            </mat-list-item>\r\n            <mat-list-item><code>.mat-small</code>, <code>.mat-caption</code>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Elevation</h3>\r\n            <ng-container *ngFor=\"let i of [0,1,2,3]\">\r\n              <mat-list-item *ngFor=\"let j of [1,2,3,4,5,6]\">\r\n                <code>.mat-elevation-z{{j+6*i}}</code>\r\n              </mat-list-item>\r\n            </ng-container>\r\n          </mat-list>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Colors\">\r\n      <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n          <mat-list>\r\n            <h3 matSubheader>Background Color</h3>\r\n            <mat-list-item *ngFor=\"let i of colorArr\">\r\n              <code>.bg-{{i}}-[50|100|200|300|400|500|600|700|800|900|A100|A200|A400|A700]</code>\r\n            </mat-list-item>\r\n            <mat-list-item><code>.bg-white</code></mat-list-item>\r\n            <mat-list-item><code>.bg-black</code></mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n        <div fxFlex=\"50\" fxFlex.lt-sm=\"100\">\r\n          <mat-list>\r\n            <h3 matSubheader>Text Color</h3>\r\n            <mat-list-item *ngFor=\"let i of colorArr\">\r\n              <code>.text-{{i}}-[50|100|200|300|400|500|600|700|800|900|A100|A200|A400|A700]</code>\r\n            </mat-list-item>\r\n            <mat-list-item><code>.text-white</code></mat-list-item>\r\n            <mat-list-item><code>.text-black</code></mat-list-item>\r\n            <mat-list-item><code>.text-light</code></mat-list-item>\r\n            <mat-list-item><code>.text-dark</code></mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Spacings\">\r\n      <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Margin</h3>\r\n            <mat-list-item *ngFor=\"let i of [0,4,8,16,24,32,48,'auto']\">\r\n              <code>.m[-[t|b|r|l|x|y]]-{{i}}</code>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Negative Margin</h3>\r\n            <mat-list-item *ngFor=\"let i of [4,8,16,24,32,48]\">\r\n              <code>.m[-[t|b|r|l|x|y]]--{{i}}</code>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Padding</h3>\r\n            <mat-list-item *ngFor=\"let i of [0,4,8,16,24,32,48]\">\r\n              <code>.p[-[t|b|r|l|x|y]]-{{i}}</code>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Fonts\">\r\n      <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Font Weight</h3>\r\n            <mat-list-item *ngFor=\"let i of [1,2,3,4,5,6,7,8,9]\">\r\n              <code>.f-w-{{i*100}}</code>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Font Size</h3>\r\n            <mat-list-item *ngFor=\"let i of [0,10,12,14,16,18,20]\">\r\n              <code>.f-s-{{i}}</code>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Border\">\r\n      <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Border Width</h3>\r\n            <mat-list-item *ngFor=\"let i of [0,1,2,3,4,5]\">\r\n              <code>.b[-[t|b|r|l]]-{{i}}</code>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Border Radius</h3>\r\n            <mat-list-item *ngFor=\"let i of [0,4,8,16,24,32,'full']\">\r\n              <code>.r[-[t|b]-[|r|l]]-{{i}}</code>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Size\">\r\n      <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Width</h3>\r\n            <mat-list-item *ngFor=\"let i of [20,25,40,50,60,75,80,'full','auto']\">\r\n              <code>.w-{{i}}</code></mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Height</h3>\r\n            <mat-list-item *ngFor=\"let i of [20,25,40,50,60,75,80,'full','auto']\">\r\n              <code>.h-{{i}}</code>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Typography\">\r\n      <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Text Transform</h3>\r\n            <mat-list-item *ngFor=\"let i of ['capitalize','uppercase','lowercase']\">\r\n              <code>.text-{{i}}</code></mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Text Align</h3>\r\n            <mat-list-item *ngFor=\"let i of ['center','right','left']\">\r\n              <code>.text-{{i}}</code></mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>White Space</h3>\r\n            <mat-list-item *ngFor=\"let i of ['normal','nowrap']\">\r\n              <code>.text-{{i}}</code></mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Vertical Align</h3>\r\n            <mat-list-item *ngFor=\"let i of ['top','middle','bottom']\">\r\n              <code>.align-{{i}}</code>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Ellipsis</h3>\r\n            <mat-list-item><code>.text-ellipsis</code>, <code>.text-truncate</code>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Image & Icon\">\r\n      <div fxLayout=\"row wrap\">\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Object Fit</h3>\r\n            <mat-list-item *ngFor=\"let i of ['cover','contain']\"><code>.fit-{{i}}</code>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n        <div fxFlex=\"25\" fxFlex.lt-sm=\"50\">\r\n          <mat-list>\r\n            <h3 matSubheader>Icon Size</h3>\r\n            <mat-list-item *ngFor=\"let i of [18,24,36,48]\"><code>.icon-{{i}}</code>\r\n            </mat-list-item>\r\n          </mat-list>\r\n        </div>\r\n      </div>\r\n    </mat-tab>\r\n\r\n  </mat-tab-group>\r\n</mat-card>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-helpers-css-class',\r\n  templateUrl: './css-class.component.html',\r\n  styleUrls: ['./css-class.component.scss'],\r\n})\r\nexport class HelpersCssClassComponent {\r\n  colorArr = 'red|pink|purple|deep-purple|indigo|blue|light-blue|cyan|teal|green|ligh-green|lime|yellow|amber|orange|deep-orange|brown|gray|grey|blue-gray|blue-grey'.split(\r\n    '|'\r\n  );\r\n}\r\n"]}