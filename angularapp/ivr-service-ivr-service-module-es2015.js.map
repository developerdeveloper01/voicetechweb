{"version":3,"sources":["./src/app/routes/ivr-service/ivr-service.module.ts","./src/app/routes/ivr-service/wav-upload/remote-data.service.ts","./src/app/routes/ivr-service/ivr-route/ivr-route.component.ts","./src/app/routes/ivr-service/ivr-route/ivr-route.component.html","./src/app/routes/ivr-service/ivr-sms-template/ivr-sms-template.component.ts","./src/app/routes/ivr-service/ivr-sms-template/ivr-sms-template.component.html","./src/app/routes/ivr-service/ivr-service-routing.module.ts","./src/app/routes/ivr-service/ivr-sms-template/remote-data.service.ts","./src/app/routes/ivr-service/wav-upload/wav-upload.component.ts","./src/app/routes/ivr-service/wav-upload/wav-upload.component.html","./src/app/routes/ivr-service/ivr-route/remote-data.service.ts"],"names":[],"mappings":"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","file":"ivr-service-ivr-service-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@shared';\r\nimport { IvrServiceRoutingModule } from './ivr-service-routing.module';\r\nimport { WavUploadComponent } from './wav-upload/wav-upload.component';\r\nimport { IvrRouteComponent } from './ivr-route/ivr-route.component';\r\nimport { IvrSmsTemplateComponent } from './ivr-sms-template/ivr-sms-template.component';\r\n\r\nconst COMPONENTS = [WavUploadComponent,IvrRouteComponent ,IvrSmsTemplateComponent];\r\nconst COMPONENTS_DYNAMIC = [];\r\n@NgModule({\r\n  declarations: [...COMPONENTS, ...COMPONENTS_DYNAMIC, WavUploadComponent, IvrRouteComponent, IvrSmsTemplateComponent],\r\n  imports: [\r\n    SharedModule,\r\n    IvrServiceRoutingModule\r\n  ],\r\n  entryComponents: COMPONENTS_DYNAMIC,\r\n})\r\nexport class IvrServiceModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface RepoSearchList {\r\n  incomplete_results: boolean;\r\n  items: any[];\r\n  total_count: number;\r\n}\r\n\r\n@Injectable()\r\nexport class TablesRemoteDataService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getData(params = {}): Observable<RepoSearchList> {\r\n    return this.http.get<RepoSearchList>('https://api.github.com/search/repositories', { params });\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\nimport { MtxGridColumn } from '@ng-matero/extensions';\r\nimport { TablesRemoteDataService } from '../ivr-route/remote-data.service';\r\n@Component({\r\n  selector: 'app-ivr-route',\r\n  templateUrl: './ivr-route.component.html',\r\n  styleUrls: ['./ivr-route.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [TablesRemoteDataService],\r\n})\r\nexport class IvrRouteComponent implements OnInit {\r\n\r\n  columns: MtxGridColumn[] = [\r\n    {\r\n      header: ' NAME',\r\n      field: ' name',\r\n      formatter: (data: any) => `<a href=\"${data.html_url}\" target=\"_blank\">${data.name}</a>`,\r\n    },\r\n    { header: 'EXPRESSION', field: 'expression' },\r\n    { header: 'WELCOME', field: 'welcome', },\r\n    { header: 'DISCONECT', field: 'disconect', },\r\n    { header: 'TIMEOUT', field: 'timeout', },\r\n    { header: 'MAX-FAIL\t', field: 'max-fail', },\r\n    { header: 'ACTIONS\t', field: 'action', },\r\n    \r\n    \r\n   ];\r\n  list = [];\r\n  total = 0;\r\n  isLoading = true;\r\n\r\n  query = {\r\n    q: 'user:nzbin',\r\n    sort: 'stars',\r\n    order: 'desc',\r\n    page: 0,\r\n    per_page: 10,\r\n  };\r\n\r\n  get params() {\r\n    const p = Object.assign({}, this.query);\r\n    p.page += 1;\r\n    return p;\r\n  }\r\n\r\n  constructor(private remoteSrv: TablesRemoteDataService, private cdr: ChangeDetectorRef) {}\r\n\r\n  ngOnInit() {\r\n    // this.getData();\r\n    this.isLoading= false;\r\n  }\r\n\r\n  getData() {\r\n    this.isLoading = true;\r\n\r\n    this.remoteSrv.getData(this.params).subscribe(\r\n      res => {\r\n        this.list = res.items;\r\n        this.total = res.total_count;\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      }\r\n    );\r\n  }\r\n\r\n  getNextPage(e: PageEvent) {\r\n    this.query.page = e.pageIndex;\r\n    this.query.per_page = e.pageSize;\r\n    this.getData();\r\n  }\r\n\r\n  search() {\r\n    this.query.page = 0;\r\n    this.getData();\r\n  }\r\n}\r\n","<page-header class=\"bg-blue-600\"></page-header>\r\n\r\n<div class=\"col-lg-12 stt\">\r\n    <button class=\"m-r-8\" mat-raised-button color=\"primary\" >ADD IVR-ROUTE</button>\r\n</div>\r\n<form>\r\n  <mat-form-field class=\"m-r-8\">\r\n    <input matInput [(ngModel)]=\"query.q\" name=\"q\" placeholder=\"Query String\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"m-r-8\">\r\n    <mat-select [(ngModel)]=\"query.sort\" name=\"sort\" placeholder=\"Sort\">\r\n      <mat-option>-- None --</mat-option>\r\n      <mat-option value=\"stars\">stars</mat-option>\r\n      <mat-option value=\"forks\">forks</mat-option>\r\n      <mat-option value=\"updated\">updated</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"m-r-8\">\r\n    <mat-select [(ngModel)]=\"query.order\" name=\"order\" placeholder=\"Order\">\r\n      <mat-option>-- None --</mat-option>\r\n      <mat-option value=\"desc\">desc</mat-option>\r\n      <mat-option value=\"asc\">asc</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <button class=\"m-r-8\" mat-raised-button color=\"primary\" (click)=\"search()\">Search</button>\r\n</form>\r\n\r\n<mtx-grid [data]=\"list\"\r\n          [columns]=\"columns\"\r\n          [length]=\"total\"\r\n          [loading]=\"isLoading\"\r\n          [pageOnFront]=\"false\"\r\n          [pageIndex]=\"query.page\"\r\n          [pageSize]=\"query.per_page\"\r\n          [pageSizeOptions]=\"[5,10,20]\"\r\n          (page)=\"getNextPage($event)\">\r\n</mtx-grid>\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\nimport { MtxGridColumn } from '@ng-matero/extensions';\r\nimport { TablesRemoteDataService } from '../ivr-sms-template/remote-data.service';\r\n@Component({\r\n  selector: 'app-ivr-sms-template',\r\n  templateUrl: './ivr-sms-template.component.html',\r\n  styleUrls: ['./ivr-sms-template.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [TablesRemoteDataService],\r\n})\r\nexport class IvrSmsTemplateComponent implements OnInit {\r\n\r\n  columns: MtxGridColumn[] = [\r\n    {\r\n      header: ' DTMF',\r\n      field: ' dtmf',\r\n      formatter: (data: any) => `<a href=\"${data.html_url}\" target=\"_blank\">${data.name}</a>`,\r\n    },\r\n    { header: 'SMS TEMPLATE', field: 'sms template' },\r\n   \r\n    { header: 'ACTIONS\t', field: 'action', },\r\n    \r\n    \r\n   ];\r\n  list = [];\r\n  total = 0;\r\n  isLoading = true;\r\n\r\n  query = {\r\n    q: 'user:nzbin',\r\n    sort: 'stars',\r\n    order: 'desc',\r\n    page: 0,\r\n    per_page: 10,\r\n  };\r\n\r\n  get params() {\r\n    const p = Object.assign({}, this.query);\r\n    p.page += 1;\r\n    return p;\r\n  }\r\n\r\n  constructor(private remoteSrv: TablesRemoteDataService, private cdr: ChangeDetectorRef) {}\r\n\r\n  ngOnInit() {\r\n    // this.getData();\r\n    this.isLoading= false;\r\n  }\r\n\r\n  getData() {\r\n    this.isLoading = true;\r\n\r\n    this.remoteSrv.getData(this.params).subscribe(\r\n      res => {\r\n        this.list = res.items;\r\n        this.total = res.total_count;\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      }\r\n    );\r\n  }\r\n\r\n  getNextPage(e: PageEvent) {\r\n    this.query.page = e.pageIndex;\r\n    this.query.per_page = e.pageSize;\r\n    this.getData();\r\n  }\r\n\r\n  search() {\r\n    this.query.page = 0;\r\n    this.getData();\r\n  }\r\n}\r\n","<page-header class=\"bg-blue-600\"></page-header>\r\n\r\n<div class=\"col-lg-12 stt\">\r\n    <button class=\"m-r-8\" mat-raised-button color=\"primary\" >ADD Template</button>\r\n</div>\r\n<form>\r\n  <mat-form-field class=\"m-r-8\">\r\n    <input matInput [(ngModel)]=\"query.q\" name=\"q\" placeholder=\"Query String\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"m-r-8\">\r\n    <mat-select [(ngModel)]=\"query.sort\" name=\"sort\" placeholder=\"Sort\">\r\n      <mat-option>-- None --</mat-option>\r\n      <mat-option value=\"stars\">stars</mat-option>\r\n      <mat-option value=\"forks\">forks</mat-option>\r\n      <mat-option value=\"updated\">updated</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"m-r-8\">\r\n    <mat-select [(ngModel)]=\"query.order\" name=\"order\" placeholder=\"Order\">\r\n      <mat-option>-- None --</mat-option>\r\n      <mat-option value=\"desc\">desc</mat-option>\r\n      <mat-option value=\"asc\">asc</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <button class=\"m-r-8\" mat-raised-button color=\"primary\" (click)=\"search()\">Search</button>\r\n</form>\r\n\r\n<mtx-grid [data]=\"list\"\r\n          [columns]=\"columns\"\r\n          [length]=\"total\"\r\n          [loading]=\"isLoading\"\r\n          [pageOnFront]=\"false\"\r\n          [pageIndex]=\"query.page\"\r\n          [pageSize]=\"query.per_page\"\r\n          [pageSizeOptions]=\"[5,10,20]\"\r\n          (page)=\"getNextPage($event)\">\r\n</mtx-grid>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { IvrRouteComponent } from './ivr-route/ivr-route.component';\r\nimport { IvrSmsTemplateComponent } from './ivr-sms-template/ivr-sms-template.component';\r\nimport { WavUploadComponent } from './wav-upload/wav-upload.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'wav-upload', component: WavUploadComponent },\r\n  { path: 'ivr-route', component: IvrRouteComponent },\r\n  { path: 'ivr-sms-template', component:IvrSmsTemplateComponent },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class IvrServiceRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface RepoSearchList {\r\n  incomplete_results: boolean;\r\n  items: any[];\r\n  total_count: number;\r\n}\r\n\r\n@Injectable()\r\nexport class TablesRemoteDataService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getData(params = {}): Observable<RepoSearchList> {\r\n    return this.http.get<RepoSearchList>('https://api.github.com/search/repositories', { params });\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\nimport { MtxGridColumn } from '@ng-matero/extensions';\r\nimport { TablesRemoteDataService } from '../wav-upload/remote-data.service';\r\n@Component({\r\n  selector: 'app-wav-upload',\r\n  templateUrl: './wav-upload.component.html',\r\n  styleUrls: ['./wav-upload.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [TablesRemoteDataService],\r\n})\r\nexport class WavUploadComponent implements OnInit {\r\n\r\n  columns: MtxGridColumn[] = [\r\n    {\r\n      header: ' NAME',\r\n      field: ' name',\r\n      formatter: (data: any) => `<a href=\"${data.html_url}\" target=\"_blank\">${data.name}</a>`,\r\n    },\r\n    { header: 'FILE NAME', field: 'file name' },\r\n    { header: 'OPTION', field: 'option', },\r\n    \r\n   ];\r\n  list = [];\r\n  total = 0;\r\n  isLoading = true;\r\n\r\n  query = {\r\n    q: 'user:nzbin',\r\n    sort: 'stars',\r\n    order: 'desc',\r\n    page: 0,\r\n    per_page: 10,\r\n  };\r\n\r\n  get params() {\r\n    const p = Object.assign({}, this.query);\r\n    p.page += 1;\r\n    return p;\r\n  }\r\n\r\n  constructor(private remoteSrv: TablesRemoteDataService, private cdr: ChangeDetectorRef) {}\r\n\r\n  ngOnInit() {\r\n    // this.getData();\r\n    this.isLoading= false;\r\n  }\r\n\r\n  getData() {\r\n    this.isLoading = true;\r\n\r\n    this.remoteSrv.getData(this.params).subscribe(\r\n      res => {\r\n        this.list = res.items;\r\n        this.total = res.total_count;\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      },\r\n      () => {\r\n        this.isLoading = false;\r\n        this.cdr.detectChanges();\r\n      }\r\n    );\r\n  }\r\n\r\n  getNextPage(e: PageEvent) {\r\n    this.query.page = e.pageIndex;\r\n    this.query.per_page = e.pageSize;\r\n    this.getData();\r\n  }\r\n\r\n  search() {\r\n    this.query.page = 0;\r\n    this.getData();\r\n  }\r\n}","<page-header class=\"bg-blue-600\"></page-header>\r\n\r\n<div class=\"col-lg-12 stt\">\r\n    <button class=\"m-r-8\" mat-raised-button color=\"primary\" >ADD</button>\r\n</div>\r\n<form>\r\n  <mat-form-field class=\"m-r-8\">\r\n    <input matInput [(ngModel)]=\"query.q\" name=\"q\" placeholder=\"Query String\">\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"m-r-8\">\r\n    <mat-select [(ngModel)]=\"query.sort\" name=\"sort\" placeholder=\"Sort\">\r\n      <mat-option>-- None --</mat-option>\r\n      <mat-option value=\"stars\">stars</mat-option>\r\n      <mat-option value=\"forks\">forks</mat-option>\r\n      <mat-option value=\"updated\">updated</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"m-r-8\">\r\n    <mat-select [(ngModel)]=\"query.order\" name=\"order\" placeholder=\"Order\">\r\n      <mat-option>-- None --</mat-option>\r\n      <mat-option value=\"desc\">desc</mat-option>\r\n      <mat-option value=\"asc\">asc</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n\r\n  <button class=\"m-r-8\" mat-raised-button color=\"primary\" (click)=\"search()\">Search</button>\r\n</form>\r\n\r\n<mtx-grid [data]=\"list\"\r\n          [columns]=\"columns\"\r\n          [length]=\"total\"\r\n          [loading]=\"isLoading\"\r\n          [pageOnFront]=\"false\"\r\n          [pageIndex]=\"query.page\"\r\n          [pageSize]=\"query.per_page\"\r\n          [pageSizeOptions]=\"[5,10,20]\"\r\n          (page)=\"getNextPage($event)\">\r\n</mtx-grid>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface RepoSearchList {\r\n  incomplete_results: boolean;\r\n  items: any[];\r\n  total_count: number;\r\n}\r\n\r\n@Injectable()\r\nexport class TablesRemoteDataService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getData(params = {}): Observable<RepoSearchList> {\r\n    return this.http.get<RepoSearchList>('https://api.github.com/search/repositories', { params });\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}