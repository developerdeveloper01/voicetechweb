{"version":3,"sources":["webpack:///src/app/routes/permissions/permissions-routing.module.ts","webpack:///src/app/routes/permissions/test/test.component.ts","webpack:///src/app/routes/permissions/test/test.component.html","webpack:///src/app/routes/permissions/role-switching/role-switching.component.ts","webpack:///src/app/routes/permissions/role-switching/role-switching.component.html","webpack:///src/app/routes/permissions/route-guard/route-guard.component.ts","webpack:///src/app/routes/permissions/route-guard/route-guard.component.html","webpack:///src/app/routes/permissions/permissions.module.ts"],"names":["routes","path","component","canActivate","data","permissions","except","redirectTo","only","PermissionsRoutingModule","forChild","PermissionsTestComponent","permissionsSrv","comparedPermission","Object","keys","getPermissions","addPermission","Promise","resolve","reject","setTimeout","removePermission","console","log","authorized","unAuthorized","changeToAdmin","changeToAnotherPermission","changeToGuest","PermissionsRoleSwitchingComponent","rolesSrv","permissionsOfRole","ADMIN","MANAGER","GUEST","_destroy$","currentRole","getRoles","currentPermissions","roles$","pipe","subscribe","roles","permissions$","next","complete","flushRolesAndPermissions","addRoleWithPermissions","onPermissionChange","PermissionsRouteGuardComponent","router","navigateByUrl","COMPONENTS","COMPONENTS_DYNAMIC","PermissionsModule"],"mappings":"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","file":"permissions-permissions-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { PermissionsRoleSwitchingComponent } from './role-switching/role-switching.component';\r\nimport { PermissionsRouteGuardComponent } from './route-guard/route-guard.component';\r\nimport { PermissionsTestComponent } from './test/test.component';\r\nimport { NgxPermissionsGuard } from 'ngx-permissions';\r\n\r\nconst routes: Routes = [\r\n  { path: 'role-switching', component: PermissionsRoleSwitchingComponent },\r\n  {\r\n    path: 'route-guard',\r\n    component: PermissionsRouteGuardComponent,\r\n    canActivate: [NgxPermissionsGuard],\r\n    data: {\r\n      permissions: {\r\n        except: 'GUEST',\r\n        redirectTo: '/dashboard',\r\n      },\r\n    },\r\n  },\r\n  {\r\n    path: 'test',\r\n    component: PermissionsTestComponent,\r\n    canActivate: [NgxPermissionsGuard],\r\n    data: {\r\n      permissions: {\r\n        only: 'ADMIN',\r\n        redirectTo: '/dashboard',\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PermissionsRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgxPermissionsService } from 'ngx-permissions';\r\n\r\n@Component({\r\n  selector: 'app-permissions-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.scss'],\r\n})\r\nexport class PermissionsTestComponent implements OnInit {\r\n  comparedPermission: string[] = ['guest'];\r\n\r\n  constructor(private permissionsSrv: NgxPermissionsService) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  getPermissions() {\r\n    return Object.keys(this.permissionsSrv.getPermissions());\r\n  }\r\n\r\n  addPermission() {\r\n    // this.permissionsSrv.loadPermissions(['admin']);\r\n    this.permissionsSrv.addPermission('admin', () => {\r\n      // return false;\r\n      return new Promise<boolean>((resolve, reject) => {\r\n        setTimeout(() => resolve(true), 2000);\r\n      });\r\n    });\r\n  }\r\n\r\n  removePermission() {\r\n    this.permissionsSrv.removePermission('admin');\r\n  }\r\n\r\n  unAuthorized() {\r\n    console.log('unAuthorized');\r\n  }\r\n\r\n  authorized() {\r\n    console.log('authorizes');\r\n  }\r\n\r\n  changeToAdmin() {\r\n    this.comparedPermission = ['admin'];\r\n    console.log(this.comparedPermission);\r\n  }\r\n\r\n  changeToAnotherPermission() {\r\n    this.comparedPermission = ['awesome'];\r\n    console.log(this.comparedPermission);\r\n  }\r\n\r\n  changeToGuest() {\r\n    this.comparedPermission = ['guest'];\r\n    console.log(this.comparedPermission);\r\n  }\r\n}\r\n","<page-header></page-header>\r\n\r\n<mtx-alert type=\"danger\">The permissions check will delay 2s.</mtx-alert>\r\n\r\n<p>\r\n  <button (click)=\"addPermission()\">Add Permission [ admin ]</button>\r\n  <button (click)=\"removePermission()\">Remove Permission [ admin ]</button>\r\n</p>\r\n\r\n<ng-template permissions [ngxPermissionsOnly]=\"['admin']\">\r\n  <p class=\"bg-green-500 text-white\">\r\n    I should see it only admin\r\n  </p>\r\n</ng-template>\r\n\r\n<ng-template [ngxPermissionsOnly]=\"['admin']\" [ngxPermissionsExcept]=\"'hhhhh'\">\r\n  <p class=\"bg-green-500 text-white\">\r\n    Usage on both only and except I should see it only admin\r\n  </p>\r\n</ng-template>\r\n\r\n<ng-template permissions [ngxPermissionsOnly]=\"['guest']\">\r\n  <p class=\"bg-purple-500 text-white\">I will see it only guest</p>\r\n</ng-template>\r\n\r\n<ng-template permissions [ngxPermissionsExcept]=\"['adminnnnn']\"\r\n             (permissionsAuthorized)=\"authorized()\"\r\n             (permissionsUnauthorized)=\"unAuthorized()\">\r\n  <p class=\"bg-orange-500 text-white\">I will see it except adminnnnn</p>\r\n</ng-template>\r\n\r\n<ng-template permissions [ngxPermissionsExcept]=\"['admin']\">\r\n  <p class=\"bg-indigo-500 text-white\">I should see it except admin</p>\r\n</ng-template>\r\n\r\n<div *ngxPermissionsOnly=\"['admin']; else a; then b\">\r\n  Testing template\r\n</div>\r\n\r\n<div *ngxPermissionsExcept=\"['admin']; else a; then b\">\r\n  Testing template\r\n</div>\r\n\r\n<ng-template #a>\r\n  <p class=\"bg-gray-900 text-white\">else block</p>\r\n</ng-template>\r\n<ng-template #b>\r\n  <p class=\"bg-gray-300\">then block</p>\r\n</ng-template>\r\n\r\n<p>\r\n  Compared permission: <code>{{comparedPermission | json}}</code>\r\n</p>\r\n\r\n<div>\r\n  <button (click)=\"changeToAdmin()\">Change To Admin Permission</button>\r\n\r\n  <button (click)=\"changeToAnotherPermission()\">Change To Awesome Permission</button>\r\n\r\n  <button (click)=\"changeToGuest()\">Change To Guest Permission</button>\r\n</div>\r\n\r\n<div>\r\n  <button *ngxPermissionsOnly=\"comparedPermission\">\r\n    This should be visible to admin or superadmin\r\n  </button>\r\n\r\n  <button *ngxPermissionsOnly=\"[]\">WTF</button>\r\n</div>\r\n\r\n<p>\r\n  Your current permissions: <code>{{getPermissions() | json}}</code>\r\n</p>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgxRolesService, NgxPermissionsService } from 'ngx-permissions';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-permissions-role-switching',\r\n  templateUrl: './role-switching.component.html',\r\n  styleUrls: ['./role-switching.component.scss'],\r\n})\r\nexport class PermissionsRoleSwitchingComponent implements OnInit, OnDestroy {\r\n  currentRole: string;\r\n\r\n  currentPermissions: string[];\r\n\r\n  permissionsOfRole = {\r\n    ADMIN: ['canAdd', 'canDelete', 'canEdit', 'canRead'],\r\n    MANAGER: ['canAdd', 'canEdit', 'canRead'],\r\n    GUEST: ['canRead'],\r\n  };\r\n\r\n  private readonly _destroy$ = new Subject<void>();\r\n\r\n  constructor(private rolesSrv: NgxRolesService, private permissionsSrv: NgxPermissionsService) {}\r\n\r\n  ngOnInit() {\r\n    this.currentRole = Object.keys(this.rolesSrv.getRoles())[0];\r\n    this.currentPermissions = Object.keys(this.permissionsSrv.getPermissions());\r\n\r\n    this.rolesSrv.roles$.pipe(takeUntil(this._destroy$)).subscribe(roles => {\r\n      console.log(roles);\r\n    });\r\n    this.permissionsSrv.permissions$.pipe(takeUntil(this._destroy$)).subscribe(permissions => {\r\n      console.log(permissions);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._destroy$.next();\r\n    this._destroy$.complete();\r\n  }\r\n\r\n  onPermissionChange() {\r\n    this.currentPermissions = this.permissionsOfRole[this.currentRole];\r\n    this.rolesSrv.flushRolesAndPermissions();\r\n    this.rolesSrv.addRoleWithPermissions(this.currentRole, this.currentPermissions);\r\n  }\r\n}\r\n","<page-header></page-header>\r\n\r\n<p>\r\n  The permissions management is powered by\r\n  <a href=\"https://github.com/AlexKhymenko/ngx-permissions\" target=\"_blank\">\r\n    <code>ngx-permissions</code>\r\n  </a>.\r\n</p>\r\n\r\n<mat-button-toggle-group [(ngModel)]=\"currentRole\" (change)=\"onPermissionChange()\">\r\n  <mat-button-toggle value=\"ADMIN\">ADMIN</mat-button-toggle>\r\n  <mat-button-toggle value=\"MANAGER\">MANAGER</mat-button-toggle>\r\n  <mat-button-toggle value=\"GUEST\">GUEST</mat-button-toggle>\r\n</mat-button-toggle-group>\r\n\r\n<p>\r\n  Your current role: <code>{{currentRole | json}}</code>\r\n</p>\r\n\r\n<p>\r\n  Your current permissions: <code>{{currentPermissions | json}}</code>\r\n</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgxRolesService, NgxPermissionsService } from 'ngx-permissions';\r\n\r\n@Component({\r\n  selector: 'app-permissions-route-guard',\r\n  templateUrl: './route-guard.component.html',\r\n  styleUrls: ['./route-guard.component.scss'],\r\n})\r\nexport class PermissionsRouteGuardComponent implements OnInit {\r\n  currentRole: string;\r\n\r\n  currentPermissions: string[];\r\n\r\n  permissionsOfRole = {\r\n    ADMIN: ['canAdd', 'canDelete', 'canEdit', 'canRead'],\r\n    MANAGER: ['canAdd', 'canEdit', 'canRead'],\r\n    GUEST: ['canRead'],\r\n  };\r\n\r\n  constructor(\r\n    private rolesSrv: NgxRolesService,\r\n    private permissionsSrv: NgxPermissionsService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.currentRole = Object.keys(this.rolesSrv.getRoles())[0];\r\n    this.currentPermissions = Object.keys(this.permissionsSrv.getPermissions());\r\n  }\r\n\r\n  onPermissionChange() {\r\n    this.currentPermissions = this.permissionsOfRole[this.currentRole];\r\n    this.rolesSrv.flushRolesAndPermissions();\r\n    this.rolesSrv.addRoleWithPermissions(this.currentRole, this.currentPermissions);\r\n\r\n    this.router.navigateByUrl('/dashboard');\r\n  }\r\n}\r\n","<page-header></page-header>\r\n\r\n<p>\r\n  The route will be redirected to dashboard after change permission.\r\n</p>\r\n\r\n<mat-button-toggle-group [(ngModel)]=\"currentRole\" (change)=\"onPermissionChange()\">\r\n  <mat-button-toggle value=\"ADMIN\">ADMIN</mat-button-toggle>\r\n  <mat-button-toggle value=\"MANAGER\">MANAGER</mat-button-toggle>\r\n  <mat-button-toggle value=\"GUEST\">GUEST</mat-button-toggle>\r\n</mat-button-toggle-group>\r\n\r\n<p>\r\n  Your current role: <code>{{currentRole | json}}</code>\r\n</p>\r\n\r\n<p>\r\n  Your current permissions: <code>{{currentPermissions | json}}</code>\r\n</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { PermissionsRoutingModule } from './permissions-routing.module';\r\nimport { PermissionsTestComponent } from './test/test.component';\r\nimport { PermissionsRouteGuardComponent } from './route-guard/route-guard.component';\r\nimport { PermissionsRoleSwitchingComponent } from './role-switching/role-switching.component';\r\n\r\nconst COMPONENTS = [\r\n  PermissionsTestComponent,\r\n  PermissionsRouteGuardComponent,\r\n  PermissionsRoleSwitchingComponent,\r\n];\r\nconst COMPONENTS_DYNAMIC = [];\r\n\r\n@NgModule({\r\n  imports: [SharedModule, PermissionsRoutingModule],\r\n  declarations: [...COMPONENTS, ...COMPONENTS_DYNAMIC],\r\n  entryComponents: COMPONENTS_DYNAMIC,\r\n})\r\nexport class PermissionsModule {}\r\n"]}